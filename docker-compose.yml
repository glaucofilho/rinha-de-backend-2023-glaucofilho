version: '3.5'
services:
  api1: # API - Instância 01
    image: rinha-glauco
    hostname: api1
    network_mode: host
    environment:
      API_PORT: 8001
      WORKERS: 2
    depends_on:
      - postgresdb
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: '0.25GB'

  api2: # API - Instância 01
    image: rinha-glauco
    hostname: api2
    network_mode: host
    environment:
      API_PORT: 8002
      WORKERS: 2
    depends_on:
      - postgresdb
      - api1
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: '0.25GB'

  nginx: # Load Balancer
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    hostname: nginx
    network_mode: host
    deploy:
      resources:
        limits:
          cpus: '0.15'
          memory: '0.05GB'

  postgresdb: # Banco de dados
    image: postgres
    container_name: postgresdb
    hostname: postgresdb
    network_mode: host
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: root
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./db/postgresql.conf:/docker-entrypoint-initdb.d/postgresql.conf
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '0.29' # SEM BUSCA
          memory: '0.25GB' # SEM BUSCA


  redis:
    image: redis:latest
    container_name: redis
    hostname: redis
    network_mode: host
    command: redis-server --save "" --appendonly no --maxclients 10000
    deploy:
      resources:
        limits:
          cpus: '0.06'
          memory: '0.05GB'